@page "/"
<!-- Menu -->

<PizzaList Title="Our selection of pizzas"
           Menu="@State.Menu"
           Selected="@( async (pizza)
             => AddToBasket(pizza))"
           ShowPizzaInformation="ShowPizzaInformation" />

<!-- End menu -->
<!-- Shopping Basket -->

<ShoppingBasket Title="Your current order"
                Basket="@State.Basket"
                GetPizzaFromId="@State.Menu.GetPizza"
                Selected="@( (pos) => RemoveFromBasket(pos))" />

<!-- End shopping basket -->
<!-- Customer entry -->

<CustomerEntry Title="Please enter your details below"
               ButtonTitle="Checkout"
               ButtonClass="btn btn-primary"
               @bind-Customer="@State.Basket.Customer"
               Submit="@PlaceOrder" />

<!-- End customer entry -->

<p>@State.ToJson()</p>

@inject IMenuService menuService
@inject IOrderService orderService
@inject State State
@inject NavigationManager uriHelper

@code {

  // private State State { get; } = new State();

  protected override async Task OnInitializedAsync()
  {
    State.Menu = await menuService.GetMenu();
  }

  private void AddToBasket(Pizza pizza)
  {
    Console.WriteLine($"Added pizza {pizza.Name}");
    State.Basket.Add(pizza.Id);
  }

  private void RemoveFromBasket(int pos)
  {
    Console.WriteLine($"Removing pizza at pos {pos}");
    State.Basket.RemoveAt(pos);
  }

  private async Task PlaceOrder()
  {
    await orderService.PlaceOrder(State.Basket);
  }

  private void ShowPizzaInformation(Pizza selected)
  {
    //Console.WriteLine($"Selected: {selected.Name} - {this.State != null} -  {this.uriHelper != null}");
    this.State.CurrentPizza = selected;

    Task.Run(() =>  this.uriHelper.NavigateTo("/pizzainfo"));
  }

}
